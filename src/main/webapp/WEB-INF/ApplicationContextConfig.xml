<?xml  version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

 
    <context:component-scan base-package="com.niit.controller" />
    <context:component-scan base-package="com.niit.model" />
   
    <mvc:annotation-driven/>
    
    
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
            <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"/>
            <property name="username" value="malu"/>
            <property name="password" value="malu"/>
        </bean>

<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
<property name="dataSource" ref="dataSource"/>
<property name="packagesToScan">
<list>
<value>com.niit</value>
</list>
</property>
<property name="hibernateProperties">
<props>
<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
<prop key="hibernate.hbm2ddl.auto">update</prop>
<prop key="hibernate.show_sql">true</prop>
</props>
</property>
</bean>    
    
    <tx:annotation-driven/>
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
 
    <security:http auto-config="true">
        <security:intercept-url pattern="/edit/**" access="permitAll" />
        <!-- <security:intercept-url pattern="/logout" access="permitAll" />
        <security:intercept-url pattern="/accessdenied" access="permitAll" /> -->
        <security:intercept-url pattern="/com.aa/**" access="hasRole({'ROLE_USER','ROLE_ADMIN'})"/>
        <security:form-login login-page="/login" default-target-url="/" authentication-failure-url="/login?error"  username-parameter="username"  password-parameter="password" /> 
       <!-- security:intercept-url pattern="//**" access="hasRole({'ROLE_ADMIN'})" />
        <security:form-login login-page="/login" default-target-url="/AdminLandingPage" authentication-failure-url="/login?error"  username-parameter="username"  password-parameter="password" /> -->
        <security:logout logout-success-url="/login?logout" />
  <security:csrf disabled="true"/>
    </security:http>
  
    <security:authentication-manager>
        <security:authentication-provider>
           <security:jdbc-user-service data-source-ref="dataSource"
           authorities-by-username-query="SELECT u.username, r.role_name from userbean u,userrole r WHERE u.uid=r.roleid and u.username =?" 
    users-by-username-query="SELECT username,password,enable from userbean WHERE username=?"/>
               </security:authentication-provider>
         </security:authentication-manager>

   <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
    <property name="maxUploadSize" value="10000000"/>
    </bean>

    
 
</beans>